import Footer from "@/components/layouts/Footer/Footer";
import Header from "@/components/layouts/Header/Header";
import { Toaster } from "@/components/ui/toaster";
import { Directions, Languages } from "@/constants/enums";
import { Locale } from "@/i18n.config";
import ReduxProvider from "@/providers/ReduxProvider";
import type { Metadata } from "next";
import { Cairo, Roboto } from "next/font/google";
import "@/styles/globals.css";
// import NextAuthSessionProvider from "@/providers/NextAuthSessionProvider";
import CartInitProvider from "@/hooks/CartInitProvider";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
// import { getMessages } from "next-intl/server";
// import { NextIntlClientProvider } from 'next-intl';
// export async function generateStaticParams() {
//   return [{ locale: Languages.ARABIC }, { locale: Languages.ENGLISH }];
// }

const roboto = Roboto({
  subsets: ["latin"],
  weight: ["400", "500", "700"],
  preload: true,
});

const cairo = Cairo({
  subsets: ["latin"],
  weight: ["400", "500", "700"],
  preload: true,
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: { locale: Locale };
}>) {
  const { locale } = await params;

  // Ensure that the incoming `locale` is valid
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  if (!routing.locales.includes(locale as any)) {
    notFound();
  }

  // Providing all messages to the client
  // side is the easiest way to get started
  // const messages = await getMessages();
  return (
    <html
      lang={locale}
      dir={locale === Languages.ARABIC ? Directions.RTL : Directions.LTR}
    >
      <body
        className={
          locale === Languages.ARABIC ? cairo.className : roboto.className
        }
      >
        {/* <NextAuthSessionProvider> */}
          {/* <NextIntlClientProvider messages={messages}> */}
          <ReduxProvider>
            <CartInitProvider>
              <Header />
              {children}
              <Footer />
              <Toaster />
            </CartInitProvider>
          </ReduxProvider>
          {/* </NextIntlClientProvider> */}
        {/* </NextAuthSessionProvider> */}
      </body>
    </html>
  );
}
